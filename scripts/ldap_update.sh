#!/bin/bash

# Source the LDAP credentials and configuration
if [ -f ./bin/.ldap_credentials ]; then
    source ./bin/.ldap_credentials
else
    echo "LDAP credentials not found. Please run 'npm run setup' first."
    exit 1
fi

# Validate that all required LDAP configuration is present
if [ -z "$ldap_server" ] || [ -z "$base_dn" ] || [ -z "$ldap_user" ] || [ -z "$ldap_password" ]; then
    echo "LDAP configuration incomplete. Please run 'npm run setup' to configure all required settings."
    exit 1
fi

# Check if ldap_lookup.sh is executable
if [ ! -x "./scripts/ldap_lookup.sh" ]; then
    echo "ldap_lookup.sh is not executable or not found in the current directory."
    exit 1
fi

# Process all files starting with ppl. or stakeholders.
for file in notes/ppl.*.md; do
    # Check if the file exists and is a regular file
    if [ ! -f "$file" ]; then
        continue
    fi

    # Extract the title attribute from the front matter
    title=$(grep -m 1 "^title: " "$file" | cut -d ' ' -f2-)

    # Check if title is empty
    if [ -z "$title" ]; then
        echo "Title not found in $file"
        continue
    fi

    # Run ldap_lookup.sh with the first name and last name as input
    ldap_output=$(./scripts/ldap_lookup.sh "$title" <<< "$ldap_password" | sed '/Enter LDAP password:/d')

    # Check if ldap_lookup.sh was successful
    if [ $? -ne 0 ]; then
        echo "LDAP lookup failed for $title"
        continue
    fi

    # Create a temporary file to store the new content
    tmp_file=$(mktemp)

    # Define the markers
    start_marker="<!-- Start Autogenerated by ldap_lookup.sh -->"
    end_marker="<!-- End Autogenerated by ldap_lookup.sh -->"

    # Check if the file already contains the markers
    if grep -q "$start_marker" "$file"; then
        # Replace the content between the markers
        awk -v ldap_output="$ldap_output" -v start_marker="$start_marker" -v end_marker="$end_marker" '
        BEGIN { in_block = 0 }
        {
            if ($0 == start_marker) {
                print $0
                print ldap_output
                in_block = 1
            } else if ($0 == end_marker) {
                print $0
                in_block = 0
            } else if (!in_block) {
                print $0
            }
        }
        ' "$file" > "$tmp_file"
    else
        # Insert the ldap_output after the front matter
        awk -v ldap_output="$ldap_output" -v start_marker="$start_marker" -v end_marker="$end_marker" '
        BEGIN { front_matter = 0 }
        {
            if ($0 == "---") {
                front_matter++
            }
            print $0
            if (front_matter == 2) {
                print start_marker
                print ldap_output
                print end_marker
                front_matter = 3
            }
        }
        ' "$file" > "$tmp_file"
    fi

    # Replace the original file with the temporary file
    mv "$tmp_file" "$file"

    echo "Processed $file"
done

echo "Running pre-commit hook..."

npm run pre-commit

echo "All files processed."